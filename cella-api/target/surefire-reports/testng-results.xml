<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="33" passed="33">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="479" started-at="2015-12-09T20:24:16Z" finished-at="2015-12-09T20:24:17Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="479" started-at="2015-12-09T20:24:16Z" finished-at="2015-12-09T20:24:17Z">
      <class name="com.paypal.credit.core.semantics.LogicalNameParserTest">
        <test-method status="PASS" signature="testInvalidLogicalNames(java.lang.String)[pri:0, instance:com.paypal.credit.core.semantics.LogicalNameParserTest@45490852]" name="testInvalidLogicalNames" duration-ms="0" started-at="2015-12-09T15:24:16Z" data-provider="invalidLogicalNames" finished-at="2015-12-09T15:24:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Authorization]]>
              </value>
            </param>
          </params>
          <exception class="com.paypal.credit.core.semantics.exceptions.CoreRouterSemanticsException">
            <message>
              <![CDATA[Logical commandprovider name Authorization does not include a valid action verb at at the start.]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.paypal.credit.core.semantics.exceptions.CoreRouterSemanticsException: Logical commandprovider name Authorization does not include a valid action verb at at the start.
	at com.paypal.credit.core.semantics.LogicalNameParser.<init>(LogicalNameParser.java:84)
	at com.paypal.credit.core.semantics.LogicalNameParserTest.testInvalidLogicalNames(LogicalNameParserTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- com.paypal.credit.core.semantics.exceptions.CoreRouterSemanticsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidLogicalNames -->
        <test-method status="PASS" signature="testInvalidLogicalNames(java.lang.String)[pri:0, instance:com.paypal.credit.core.semantics.LogicalNameParserTest@45490852]" name="testInvalidLogicalNames" duration-ms="0" started-at="2015-12-09T15:24:16Z" data-provider="invalidLogicalNames" finished-at="2015-12-09T15:24:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="com.paypal.credit.core.semantics.exceptions.CoreRouterSemanticsException">
            <message>
              <![CDATA[Logical commandprovider name  does not include a valid action verb at at the start.]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.paypal.credit.core.semantics.exceptions.CoreRouterSemanticsException: Logical commandprovider name  does not include a valid action verb at at the start.
	at com.paypal.credit.core.semantics.LogicalNameParser.<init>(LogicalNameParser.java:84)
	at com.paypal.credit.core.semantics.LogicalNameParserTest.testInvalidLogicalNames(LogicalNameParserTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- com.paypal.credit.core.semantics.exceptions.CoreRouterSemanticsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidLogicalNames -->
        <test-method status="PASS" signature="testInvalidLogicalNames(java.lang.String)[pri:0, instance:com.paypal.credit.core.semantics.LogicalNameParserTest@45490852]" name="testInvalidLogicalNames" duration-ms="0" started-at="2015-12-09T15:24:16Z" data-provider="invalidLogicalNames" finished-at="2015-12-09T15:24:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Get]]>
              </value>
            </param>
          </params>
          <exception class="com.paypal.credit.core.semantics.exceptions.CoreRouterSemanticsException">
            <message>
              <![CDATA[Logical commandprovider name Get does not include a subject.]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.paypal.credit.core.semantics.exceptions.CoreRouterSemanticsException: Logical commandprovider name Get does not include a subject.
	at com.paypal.credit.core.semantics.LogicalNameParser.<init>(LogicalNameParser.java:80)
	at com.paypal.credit.core.semantics.LogicalNameParserTest.testInvalidLogicalNames(LogicalNameParserTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- com.paypal.credit.core.semantics.exceptions.CoreRouterSemanticsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidLogicalNames -->
        <test-method status="PASS" signature="testInvalidLogicalNames(java.lang.String)[pri:0, instance:com.paypal.credit.core.semantics.LogicalNameParserTest@45490852]" name="testInvalidLogicalNames" duration-ms="0" started-at="2015-12-09T15:24:16Z" data-provider="invalidLogicalNames" finished-at="2015-12-09T15:24:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chooseAuthorizationByAuthorizationId]]>
              </value>
            </param>
          </params>
          <exception class="com.paypal.credit.core.semantics.exceptions.CoreRouterSemanticsException">
            <message>
              <![CDATA[Logical commandprovider name chooseAuthorizationByAuthorizationId does not include a valid action verb at at the start.]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.paypal.credit.core.semantics.exceptions.CoreRouterSemanticsException: Logical commandprovider name chooseAuthorizationByAuthorizationId does not include a valid action verb at at the start.
	at com.paypal.credit.core.semantics.LogicalNameParser.<init>(LogicalNameParser.java:84)
	at com.paypal.credit.core.semantics.LogicalNameParserTest.testInvalidLogicalNames(LogicalNameParserTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- com.paypal.credit.core.semantics.exceptions.CoreRouterSemanticsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidLogicalNames -->
        <test-method status="PASS" signature="testInvalidLogicalNames(java.lang.String)[pri:0, instance:com.paypal.credit.core.semantics.LogicalNameParserTest@45490852]" name="testInvalidLogicalNames" duration-ms="1" started-at="2015-12-09T15:24:16Z" data-provider="invalidLogicalNames" finished-at="2015-12-09T15:24:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[GetAuthorizationListBy]]>
              </value>
            </param>
          </params>
          <exception class="com.paypal.credit.core.semantics.exceptions.CoreRouterSemanticsException">
            <message>
              <![CDATA[Logical commandprovider name GetAuthorizationListBy included a preposition but does not include an object.]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.paypal.credit.core.semantics.exceptions.CoreRouterSemanticsException: Logical commandprovider name GetAuthorizationListBy included a preposition but does not include an object.
	at com.paypal.credit.core.semantics.LogicalNameParser.<init>(LogicalNameParser.java:67)
	at com.paypal.credit.core.semantics.LogicalNameParserTest.testInvalidLogicalNames(LogicalNameParserTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- com.paypal.credit.core.semantics.exceptions.CoreRouterSemanticsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidLogicalNames -->
        <test-method status="PASS" signature="testValidLogicalNames(java.lang.String, com.paypal.credit.core.semantics.Action, java.lang.String, com.paypal.credit.core.semantics.CollectionType, com.paypal.credit.core.semantics.Preposition, java.lang.String)[pri:0, instance:com.paypal.credit.core.semantics.LogicalNameParserTest@45490852]" name="testValidLogicalNames" duration-ms="1" started-at="2015-12-09T15:24:16Z" data-provider="validLogicalNames" finished-at="2015-12-09T15:24:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[GetAuthorization]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Authorization]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidLogicalNames -->
        <test-method status="PASS" signature="testValidLogicalNames(java.lang.String, com.paypal.credit.core.semantics.Action, java.lang.String, com.paypal.credit.core.semantics.CollectionType, com.paypal.credit.core.semantics.Preposition, java.lang.String)[pri:0, instance:com.paypal.credit.core.semantics.LogicalNameParserTest@45490852]" name="testValidLogicalNames" duration-ms="0" started-at="2015-12-09T15:24:16Z" data-provider="validLogicalNames" finished-at="2015-12-09T15:24:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[GetAuthorizationList]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Authorization]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[LIST]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidLogicalNames -->
        <test-method status="PASS" signature="testValidLogicalNames(java.lang.String, com.paypal.credit.core.semantics.Action, java.lang.String, com.paypal.credit.core.semantics.CollectionType, com.paypal.credit.core.semantics.Preposition, java.lang.String)[pri:0, instance:com.paypal.credit.core.semantics.LogicalNameParserTest@45490852]" name="testValidLogicalNames" duration-ms="0" started-at="2015-12-09T15:24:16Z" data-provider="validLogicalNames" finished-at="2015-12-09T15:24:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[GetAuthorizationByAuthorizationId]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Authorization]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[BY]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[AuthorizationId]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidLogicalNames -->
        <test-method status="PASS" signature="testValidLogicalNames(java.lang.String, com.paypal.credit.core.semantics.Action, java.lang.String, com.paypal.credit.core.semantics.CollectionType, com.paypal.credit.core.semantics.Preposition, java.lang.String)[pri:0, instance:com.paypal.credit.core.semantics.LogicalNameParserTest@45490852]" name="testValidLogicalNames" duration-ms="1" started-at="2015-12-09T15:24:16Z" data-provider="validLogicalNames" finished-at="2015-12-09T15:24:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[GetAuthorizationListByAuthorizationId]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Authorization]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[LIST]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[BY]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[AuthorizationId]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidLogicalNames -->
      </class> <!-- com.paypal.credit.core.semantics.LogicalNameParserTest -->
      <class name="com.paypal.credit.workflowcommand.WorkflowFactoryTest">
        <test-method status="PASS" signature="initializeHandlers()[pri:0, instance:com.paypal.credit.workflowcommand.WorkflowFactoryTest@3c3cebf1]" name="initializeHandlers" is-config="true" duration-ms="0" started-at="2015-12-09T15:24:16Z" finished-at="2015-12-09T15:24:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeHandlers -->
        <test-method status="PASS" signature="test(java.net.URL)[pri:0, instance:com.paypal.credit.workflowcommand.WorkflowFactoryTest@3c3cebf1]" name="test" duration-ms="9" started-at="2015-12-09T15:24:16Z" data-provider="validWorkflowDataProvider" finished-at="2015-12-09T15:24:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rsc:OneStepWorkflow.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(java.net.URL)[pri:0, instance:com.paypal.credit.workflowcommand.WorkflowFactoryTest@3c3cebf1]" name="test" duration-ms="10" started-at="2015-12-09T15:24:16Z" data-provider="validWorkflowDataProvider" finished-at="2015-12-09T15:24:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rsc:TwoStepWorkflow.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(java.net.URL)[pri:0, instance:com.paypal.credit.workflowcommand.WorkflowFactoryTest@3c3cebf1]" name="test" duration-ms="10" started-at="2015-12-09T15:24:16Z" data-provider="validWorkflowDataProvider" finished-at="2015-12-09T15:24:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rsc:ParallelWorkflow.xml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
      </class> <!-- com.paypal.credit.workflowcommand.WorkflowFactoryTest -->
      <class name="com.paypal.credit.workflowcommand.WorkflowReaderTest">
        <test-method status="PASS" signature="initializeHandlers()[pri:0, instance:com.paypal.credit.workflowcommand.WorkflowReaderTest@62513bb5]" name="initializeHandlers" is-config="true" duration-ms="0" started-at="2015-12-09T15:24:16Z" finished-at="2015-12-09T15:24:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeHandlers -->
        <test-method status="PASS" signature="test(java.net.URL, int)[pri:0, instance:com.paypal.credit.workflowcommand.WorkflowReaderTest@62513bb5]" name="test" duration-ms="7" started-at="2015-12-09T15:24:16Z" data-provider="validWorkflowDataProvider" finished-at="2015-12-09T15:24:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rsc:OneStepWorkflow.xml]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(java.net.URL, int)[pri:0, instance:com.paypal.credit.workflowcommand.WorkflowReaderTest@62513bb5]" name="test" duration-ms="7" started-at="2015-12-09T15:24:16Z" data-provider="validWorkflowDataProvider" finished-at="2015-12-09T15:24:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rsc:TwoStepWorkflow.xml]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(java.net.URL, int)[pri:0, instance:com.paypal.credit.workflowcommand.WorkflowReaderTest@62513bb5]" name="test" duration-ms="9" started-at="2015-12-09T15:24:16Z" data-provider="validWorkflowDataProvider" finished-at="2015-12-09T15:24:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rsc:ParallelWorkflow.xml]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(java.net.URL, int)[pri:0, instance:com.paypal.credit.workflowcommand.WorkflowReaderTest@62513bb5]" name="test" duration-ms="47" started-at="2015-12-09T15:24:17Z" data-provider="validWorkflowDataProvider" finished-at="2015-12-09T15:24:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[rsc:workflow1.xml]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
      </class> <!-- com.paypal.credit.workflowcommand.WorkflowReaderTest -->
      <class name="com.paypal.credit.core.semantics.CommandClassSemanticsTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.paypal.credit.core.semantics.CommandClassSemanticsTest@43271a80]" name="beforeTest" is-config="true" duration-ms="8" started-at="2015-12-09T15:24:16Z" finished-at="2015-12-09T15:24:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.paypal.credit.core.semantics.CommandFactoryMethodSemanticsTest@2334d801]" name="beforeTest" is-config="true" duration-ms="0" started-at="2015-12-09T15:24:16Z" finished-at="2015-12-09T15:24:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="b4Test()[pri:0, instance:com.paypal.credit.core.commandprovider.CommandProviderTest@43a63a1c]" name="b4Test" is-config="true" duration-ms="1" started-at="2015-12-09T15:24:16Z" finished-at="2015-12-09T15:24:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- b4Test -->
        <test-method status="PASS" signature="b4Test()[pri:0, instance:com.paypal.credit.workflowtest.FullStackTest@2ed53d82]" name="b4Test" is-config="true" duration-ms="16" started-at="2015-12-09T15:24:16Z" finished-at="2015-12-09T15:24:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- b4Test -->
        <test-method status="PASS" signature="b4Test()[pri:0, instance:com.paypal.credit.core.processorbridge.ProcessorBridgeDefaultFactoryTest@563126f6]" name="b4Test" is-config="true" duration-ms="0" started-at="2015-12-09T15:24:16Z" finished-at="2015-12-09T15:24:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- b4Test -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.paypal.credit.core.semantics.ProcessorBridgeMethodSemanticsTest@34f50caf]" name="beforeTest" is-config="true" duration-ms="0" started-at="2015-12-09T15:24:16Z" finished-at="2015-12-09T15:24:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testInvalidCommandClassName(java.lang.String, com.paypal.credit.core.semantics.Action, java.lang.String, com.paypal.credit.core.semantics.CollectionType, com.paypal.credit.core.semantics.Preposition, java.lang.String)[pri:0, instance:com.paypal.credit.core.semantics.CommandClassSemanticsTest@43271a80]" name="testInvalidCommandClassName" duration-ms="1" started-at="2015-12-09T15:24:16Z" data-provider="invalidCommandClassData" finished-at="2015-12-09T15:24:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[GetAuthorizationBy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Authorization]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[BY]]>
              </value>
            </param>
            <param index="5">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="com.paypal.credit.core.semantics.exceptions.CoreRouterSemanticsException">
            <message>
              <![CDATA[Logical commandprovider name GetAuthorizationBy included a preposition but does not include an object.]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.paypal.credit.core.semantics.exceptions.CoreRouterSemanticsException: Logical commandprovider name GetAuthorizationBy included a preposition but does not include an object.
	at com.paypal.credit.core.semantics.LogicalNameParser.<init>(LogicalNameParser.java:67)
	at com.paypal.credit.core.semantics.AbstractBaseSemantics.<init>(AbstractBaseSemantics.java:112)
	at com.paypal.credit.core.semantics.CommandClassSemantics.<init>(CommandClassSemantics.java:35)
	at com.paypal.credit.core.semantics.ApplicationSemantics.createCommandClassSemantic(ApplicationSemantics.java:62)
	at com.paypal.credit.core.semantics.CommandClassSemanticsTest.testInvalidCommandClassName(CommandClassSemanticsTest.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- com.paypal.credit.core.semantics.exceptions.CoreRouterSemanticsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidCommandClassName -->
        <test-method status="PASS" signature="testValidCommandClassName(java.lang.String, com.paypal.credit.core.semantics.Action, java.lang.String, com.paypal.credit.core.semantics.CollectionType, com.paypal.credit.core.semantics.Preposition, java.lang.String)[pri:0, instance:com.paypal.credit.core.semantics.CommandClassSemanticsTest@43271a80]" name="testValidCommandClassName" duration-ms="1" started-at="2015-12-09T15:24:16Z" data-provider="validCommandClassData" finished-at="2015-12-09T15:24:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[GetAuthorizationCommand]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Authorization]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidCommandClassName -->
        <test-method status="PASS" signature="testValidCommandClassName(java.lang.String, com.paypal.credit.core.semantics.Action, java.lang.String, com.paypal.credit.core.semantics.CollectionType, com.paypal.credit.core.semantics.Preposition, java.lang.String)[pri:0, instance:com.paypal.credit.core.semantics.CommandClassSemanticsTest@43271a80]" name="testValidCommandClassName" duration-ms="0" started-at="2015-12-09T15:24:16Z" data-provider="validCommandClassData" finished-at="2015-12-09T15:24:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[GetAuthorizationByAuthorizationIdCommand]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Authorization]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[BY]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[AuthorizationId]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidCommandClassName -->
      </class> <!-- com.paypal.credit.core.semantics.CommandClassSemanticsTest -->
      <class name="com.paypal.credit.workflowtest.FullStackTest">
        <test-method status="PASS" signature="testAsynchronousCall()[pri:0, instance:com.paypal.credit.workflowtest.FullStackTest@2ed53d82]" name="testAsynchronousCall" duration-ms="286" started-at="2015-12-09T15:24:16Z" finished-at="2015-12-09T15:24:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAsynchronousCall -->
        <test-method status="PASS" signature="initializeHandlers()[pri:0, instance:com.paypal.credit.workflowtest.FullStackTest@2ed53d82]" name="initializeHandlers" is-config="true" duration-ms="0" started-at="2015-12-09T15:24:16Z" finished-at="2015-12-09T15:24:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeHandlers -->
        <test-method status="PASS" signature="testSynchronousCall()[pri:0, instance:com.paypal.credit.workflowtest.FullStackTest@2ed53d82]" name="testSynchronousCall" duration-ms="20" started-at="2015-12-09T15:24:16Z" finished-at="2015-12-09T15:24:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSynchronousCall -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.paypal.credit.workflowtest.FullStackTest@2ed53d82]" name="afterTest" is-config="true" duration-ms="0" started-at="2015-12-09T15:24:17Z" finished-at="2015-12-09T15:24:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.paypal.credit.workflowtest.FullStackTest -->
      <class name="com.paypal.credit.core.semantics.CollectionTypeVocabularyTest">
        <test-method status="PASS" signature="testFindByObjectSuffix()[pri:0, instance:com.paypal.credit.core.semantics.CollectionTypeVocabularyTest@4413d052]" name="testFindByObjectSuffix" duration-ms="2" started-at="2015-12-09T15:24:16Z" finished-at="2015-12-09T15:24:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindByObjectSuffix -->
        <test-method status="PASS" signature="testGetSimpleName()[pri:0, instance:com.paypal.credit.core.semantics.CollectionTypeVocabularyTest@4413d052]" name="testGetSimpleName" duration-ms="0" started-at="2015-12-09T15:24:16Z" finished-at="2015-12-09T15:24:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSimpleName -->
      </class> <!-- com.paypal.credit.core.semantics.CollectionTypeVocabularyTest -->
      <class name="com.paypal.credit.core.processorbridge.ProcessorBridgeDefaultFactoryTest">
        <test-method status="PASS" signature="initializeHandlers()[pri:0, instance:com.paypal.credit.core.processorbridge.ProcessorBridgeDefaultFactoryTest@563126f6]" name="initializeHandlers" is-config="true" duration-ms="0" started-at="2015-12-09T15:24:16Z" finished-at="2015-12-09T15:24:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeHandlers -->
        <test-method status="PASS" signature="test()[pri:0, instance:com.paypal.credit.core.processorbridge.ProcessorBridgeDefaultFactoryTest@563126f6]" name="test" duration-ms="4" started-at="2015-12-09T15:24:16Z" finished-at="2015-12-09T15:24:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
      </class> <!-- com.paypal.credit.core.processorbridge.ProcessorBridgeDefaultFactoryTest -->
      <class name="com.paypal.credit.core.semantics.CommandFactoryMethodSemanticsTest">
        <test-method status="PASS" signature="testKnownValidElements(java.lang.String, com.paypal.credit.core.semantics.Action, java.lang.String, com.paypal.credit.core.semantics.CollectionType, com.paypal.credit.core.semantics.Preposition, java.lang.String)[pri:0, instance:com.paypal.credit.core.semantics.CommandFactoryMethodSemanticsTest@2334d801]" name="testKnownValidElements" duration-ms="1" started-at="2015-12-09T15:24:16Z" data-provider="validElementsData" finished-at="2015-12-09T15:24:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[createGetAccountCommand]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Account]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testKnownValidElements -->
        <test-method status="PASS" signature="testKnownValidElements(java.lang.String, com.paypal.credit.core.semantics.Action, java.lang.String, com.paypal.credit.core.semantics.CollectionType, com.paypal.credit.core.semantics.Preposition, java.lang.String)[pri:0, instance:com.paypal.credit.core.semantics.CommandFactoryMethodSemanticsTest@2334d801]" name="testKnownValidElements" duration-ms="1" started-at="2015-12-09T15:24:16Z" data-provider="validElementsData" finished-at="2015-12-09T15:24:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[createGetAccountListCommand]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Account]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[LIST]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testKnownValidElements -->
        <test-method status="PASS" signature="testKnownValidElements(java.lang.String, com.paypal.credit.core.semantics.Action, java.lang.String, com.paypal.credit.core.semantics.CollectionType, com.paypal.credit.core.semantics.Preposition, java.lang.String)[pri:0, instance:com.paypal.credit.core.semantics.CommandFactoryMethodSemanticsTest@2334d801]" name="testKnownValidElements" duration-ms="0" started-at="2015-12-09T15:24:16Z" data-provider="validElementsData" finished-at="2015-12-09T15:24:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[createPostAuthorizationCommand]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Authorization]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testKnownValidElements -->
      </class> <!-- com.paypal.credit.core.semantics.CommandFactoryMethodSemanticsTest -->
      <class name="com.paypal.credit.core.semantics.ProcessorBridgeMethodSemanticsTest">
        <test-method status="PASS" signature="testInvalidCommandClassName(java.lang.String)[pri:0, instance:com.paypal.credit.core.semantics.ProcessorBridgeMethodSemanticsTest@34f50caf]" name="testInvalidCommandClassName" duration-ms="0" started-at="2015-12-09T15:24:16Z" data-provider="invalidRouterMethodData" finished-at="2015-12-09T15:24:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[getAuthorizationBy]]>
              </value>
            </param>
          </params>
          <exception class="com.paypal.credit.core.semantics.exceptions.CoreRouterSemanticsException">
            <message>
              <![CDATA[Logical commandprovider name getAuthorizationBy included a preposition but does not include an object.]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.paypal.credit.core.semantics.exceptions.CoreRouterSemanticsException: Logical commandprovider name getAuthorizationBy included a preposition but does not include an object.
	at com.paypal.credit.core.semantics.LogicalNameParser.<init>(LogicalNameParser.java:67)
	at com.paypal.credit.core.semantics.AbstractBaseSemantics.<init>(AbstractBaseSemantics.java:112)
	at com.paypal.credit.core.semantics.ProcessorBridgeMethodSemantics.<init>(ProcessorBridgeMethodSemantics.java:49)
	at com.paypal.credit.core.semantics.ApplicationSemantics.createProcessorBridgeMethodSemantics(ApplicationSemantics.java:72)
	at com.paypal.credit.core.semantics.ProcessorBridgeMethodSemanticsTest.testInvalidCommandClassName(ProcessorBridgeMethodSemanticsTest.java:69)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- com.paypal.credit.core.semantics.exceptions.CoreRouterSemanticsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidCommandClassName -->
        <test-method status="PASS" signature="testValidRouterMethodName(java.lang.String, com.paypal.credit.core.semantics.Action, java.lang.String, com.paypal.credit.core.semantics.CollectionType, com.paypal.credit.core.semantics.Preposition, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.paypal.credit.core.semantics.ProcessorBridgeMethodSemanticsTest@34f50caf]" name="testValidRouterMethodName" duration-ms="1" started-at="2015-12-09T15:24:16Z" data-provider="validRouterMethodData" finished-at="2015-12-09T15:24:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[postAuthorization]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[POST]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Authorization]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
            <param index="5">
              <value is-null="true"/>
            </param>
            <param index="6">
              <value>
                <![CDATA[PostAuthorizationCommand]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[createPostAuthorizationCommand]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidRouterMethodName -->
        <test-method status="PASS" signature="testValidRouterMethodName(java.lang.String, com.paypal.credit.core.semantics.Action, java.lang.String, com.paypal.credit.core.semantics.CollectionType, com.paypal.credit.core.semantics.Preposition, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.paypal.credit.core.semantics.ProcessorBridgeMethodSemanticsTest@34f50caf]" name="testValidRouterMethodName" duration-ms="1" started-at="2015-12-09T15:24:16Z" data-provider="validRouterMethodData" finished-at="2015-12-09T15:24:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[getAuthorizationByAuthorizationId]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[GET]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Authorization]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[BY]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[AuthorizationId]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[GetAuthorizationByAuthorizationIdCommand]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[createGetAuthorizationByAuthorizationIdCommand]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidRouterMethodName -->
      </class> <!-- com.paypal.credit.core.semantics.ProcessorBridgeMethodSemanticsTest -->
      <class name="com.paypal.credit.core.commandprovider.CommandProviderTest">
        <test-method status="PASS" signature="initializeHandlers()[pri:0, instance:com.paypal.credit.core.commandprovider.CommandProviderTest@43a63a1c]" name="initializeHandlers" is-config="true" duration-ms="1" started-at="2015-12-09T15:24:16Z" finished-at="2015-12-09T15:24:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeHandlers -->
        <test-method status="PASS" signature="testFindCommand()[pri:0, instance:com.paypal.credit.core.commandprovider.CommandProviderTest@43a63a1c]" name="testFindCommand" duration-ms="5" started-at="2015-12-09T15:24:16Z" finished-at="2015-12-09T15:24:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindCommand -->
      </class> <!-- com.paypal.credit.core.commandprovider.CommandProviderTest -->
      <class name="com.paypal.credit.core.datasourceprovider.DataSourceProviderFactoryTest">
        <test-method status="PASS" signature="testCreateDataSource()[pri:0, instance:com.paypal.credit.core.datasourceprovider.DataSourceProviderFactoryTest@62d13a01]" name="testCreateDataSource" duration-ms="3" started-at="2015-12-09T15:24:16Z" finished-at="2015-12-09T15:24:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateDataSource -->
        <test-method status="PASS" signature="testFindDataSource()[pri:0, instance:com.paypal.credit.core.datasourceprovider.DataSourceProviderFactoryTest@62d13a01]" name="testFindDataSource" duration-ms="0" started-at="2015-12-09T15:24:16Z" finished-at="2015-12-09T15:24:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindDataSource -->
      </class> <!-- com.paypal.credit.core.datasourceprovider.DataSourceProviderFactoryTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
